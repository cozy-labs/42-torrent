{"version":3,"sources":["app/application.js","app/collections/dl_list.js","app/initialize.js","app/lib/view_collection.js","app/lib/view_helper.js","app/models/dl.js","app/views/dl_list.js","app/views/dl_row.js","app/views/home_view.js","app/views/templates/dl_list.jade","app/views/templates/dl_row.jade","app/views/templates/home.jade","app/views/view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEA;AAAA;CCAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Application bootstrapper.\nvar Application = {\n  initialize: function () {\n    var HomeView = require('views/home_view')\n    var ListDl = require('./collections/dl_list')\n    var ListDlView = require('./views/dl_list')\n\n\n    this.homeView = new HomeView();\n\n    $('body').html(this.homeView.render().el);\n\n    this.listDl = new ListDl()\n    this.listDlView = new ListDlView({collection: this.listDl})\n\n    this.listDlView.render()\n\n    //this.listDl.fetch()\n\n\n    if (typeof Object.freeze === 'function') {\n      Object.freeze(this);\n    }\n  }\n};\n\nmodule.exports = Application;\n","\nvar Dl = require('../models/dl')\n\nmodule.exports =  Backbone.Collection.extend({\n    model: Dl,\n    url: 'dl',\n})\n","var application = require('application');\n\n$(function () {\n  application.initialize();\n  Backbone.history.start();\n});\n","\nvar BaseView = require('../views/view')\n\nvar ViewCollection = BaseView.extend({\n    itemView: null,\n    views: {},\n    collectionEl: null,\n\n    appendView: function (view) {\n        console.log('view appended : ', view)\n        console.log('collection El: ', this.$collectionEl)\n        this.$collectionEl.append(view.el)\n    },\n\n    initialize: function () {\n        ViewCollection.__super__.initialize.call(this)\n        this.views = {}\n        this.listenTo(this.collection, 'reset', this.onReset)\n        this.listenTo(this.collection, 'add', this.addItem)\n        this.listenTo(this.collection, 'remove', this.removeItem)\n\n        if (this.collectionEl == null || undefined) {\n            collectionEl = el\n        }\n    },\n\n    render: function () {\n        for (id in this.views) {\n            this.views[id].$el.detach()\n        }\n        ViewCollection.__super__.render.call(this)\n    },\n\n    afterRender: function () {\n        console.log('after render')\n        this.$collectionEl = $(this.collectionEl)\n        console.log('el: ', this.$collectionEl)\n        for (id in this.views) {\n            console.log('el in for: ', this.$collectionEl)\n            this.appendView(this.views[id])\n        }\n        this.onReset(this.collection)\n    },\n\n    remove: function () {\n        this.onReset()\n        ViewCollection.__super__.remove.call(this)\n    },\n\n    onReset: function (newCollection) {\n        for (id in this.views) {\n            view.remove()\n        }\n        newCollection.forEach(this.addItem)\n    },\n\n    addItem: function (model) {\n        console.log('add item view: model -> ', model)\n        view = new this.itemView({model: model})\n        console.log('new view created: ', view)\n        this.views[model.cid] = view.render()\n        console.log('add -> list views: ', this.views)\n        this.appendView(view)\n    },\n\n\n    removeItem: function (model) {\n        this.views[model.cid].remove()\n        delete this.views[model.cid]\n    }\n})\n\nmodule.exports = ViewCollection\n","// Put your handlebars.js helpers here.\n","\n\nmodule.exports =  Backbone.Model.extend({\n})\n","\n\nvar ViewCollection = require('../lib/view_collection')\nvar DlRowView = require('./dl_row')\n\nvar DlListView = ViewCollection.extend({\n    template:  require('./templates/dl_list'),\n    el: '#dl-content',\n\n    itemView: DlRowView,\n    collectionEl: 'tbody#table-items-content',\n\n    initialize: function (options) {\n        this.collection = options.collection\n        DlListView.__super__.initialize.call(this)\n    }\n\n})\n\n\nmodule.exports = DlListView\n","\nvar BaseView = require('./view');\n\nvar DlRowView = BaseView.extend({\n    template: require('./templates/dl_row'),\n\n    className: 'dl-row',\n    tagName: 'tr',\n\n    initialize: function (attributes) {\n        this.model = attributes.model\n\n        console.log('dl row view init: ', this)\n    },\n\n    getRenderData: function () {\n        return {model: this.model.toJSON()}\n    }\n\n})\n\nmodule.exports = DlRowView\n","\nvar View = require('./view');\nvar template = require('./templates/home');\nvar DlCollection = require('../collections/dl_list')\nvar app = require('../application')\n\nvar HomeView = View.extend({\n    id: 'home-view',\n    template: template,\n\n    events: {\n        'click button#menu-add-magnet': 'createNewDl',\n    },\n\n    createNewDl: function () {\n        var magnet = this.$('input#magnet-input').val()\n\n        app.listDl.create({'magnet': magnet}, {\n            error: function (error) {\n                console.error(error)\n            },\n            success: function (data) {\n                console.log('data: ', app.listDl.models)\n            }\n        })\n    }\n\n\n\n});\n\nmodule.exports = HomeView\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<table class=\"table table-striped\"><thead><tr><th>Title</th><th>Length</th></tr></thead><tbody id=\"table-items-content\"></tbody></table>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<td>you\\'r a winner!</td><td>' + escape((interp = model.plays) == null ? '' : interp) + '</td><td>' + escape((interp = model.time) == null ? '' : interp) + '</td>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge\n/**/) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"content\"><div class=\"page-header\"><div class=\"row\"><div class=\"input-group\"><input id=\"magnet-input\" type=\"text\" placeholder=\"Add magnet\" class=\"form-control\"/><span class=\"input-group-btn\"><button id=\"menu-add-magnet\" role=\"presentation\" class=\"btn btn-default\">Go</button></span></div></div></div><div id=\"menu\" class=\"nav nav-tabs\"></div><div id=\"dl-content\"></div></div><p>exemple:</p><p>Book -> \\'magnet:?xt=urn:btih:C472D99E7C2260D97F063298E751DA975FA19B19&dn=How+to+learn+seo%2Cphp%2Cwordpress+In+telugu&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A80&tr=udp%3A%2F%2Fopen.demonii.com%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80%2Fannounce&tr=udp%3A%2F%2F9.rarbg.to%3A2710%2Fannounce&tr=udp%3A%2F%2Ftracker.trackerfix.com%3A80%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969%2Fannounce\\'</p><p>ArchLinux -> \\'magnet:?xt=urn:btih:252b8cb7144fa583de1a68a0298e1ee255b7c7ac&dn=archlinux-2015.09.01-dual.iso&tr=udp://tracker.archlinux.org:6969&tr=http://tracker.archlinux.org:6969/announce\\'</p>');\n}\nreturn buf.join(\"\");\n};","require('lib/view_helper');\n\n// Base class for all views.\nmodule.exports = Backbone.View.extend({\n    initialize: function () {\n        this.render = _.bind(this.render, this);\n    },\n\n    template: function () { return null; },\n    getRenderData: function () { return null; },\n\n    render: function () {\n        console.log('render view: ', this.template)\n        this.$el.html(this.template(this.getRenderData()));\n        this.afterRender();\n        return this;\n    },\n\n    afterRender: function () { return null; }\n});\n"]}